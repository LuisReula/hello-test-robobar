package com.sinensia.hellotestrobobar;

// Generated by Selenium IDE

import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestInstance;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;

import java.util.List;

import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.MatcherAssert.assertThat;

@TestInstance(TestInstance.Lifecycle.PER_CLASS)
public class RoboBarEdadTest {
    private WebDriver driver;
    //private Map<String, Object> vars;
    JavascriptExecutor js;
    @BeforeAll
    public void setUp() {
        driver = new ChromeDriver();
        js = (JavascriptExecutor) driver;
        //vars = new HashMap<String, Object>();
    }
    @AfterAll
    public void tearDown() {
        driver.quit();
    }
    @Test
    public void edadCola() {
        // Test name: EdadCola
        // Step # | name | target | value
        // 1 | open | http://localhost:3000/#!/#%2F |
        driver.get("http://localhost:3000/#!/#%2F");
        // 2 | setWindowSize | 1159x948 |
        driver.manage().window().setSize(new Dimension(1159, 948));
        // 3 | click | css=.ng-scope:nth-child(1) > td .input-group-append > .btn |
        driver.findElement(By.cssSelector(".ng-scope:nth-child(1) > td .input-group-append > .btn")).click();
        // 4 | click | css=.btn-success |
        driver.findElement(By.cssSelector(".btn-success")).click();
        // 5 | mouseOver | css=.btn-success |
        {
            WebElement element = driver.findElement(By.cssSelector(".btn-success"));
            Actions builder = new Actions(driver);
            builder.moveToElement(element).perform();
        }
        // 6 | click | css=.btn-success |
        driver.findElement(By.cssSelector(".btn-success")).click();
        // 7 | assertElementPresent | linkText=New order | New order
        {
            List<WebElement> elements = driver.findElements(By.linkText("New order"));
            assert(elements.size() > 0);
        }
    }
    @Test
    public void edadMayorCerveza() {
        // Test name: EdadMayorCerveza
        // Step # | name | target | value
        // 1 | open | http://localhost:3000/#!/#%2F |
        driver.get("http://localhost:3000/#!/#%2F");
        // 2 | setWindowSize | 1097x948 |
        driver.manage().window().setSize(new Dimension(1097, 948));
        // 3 | click | css=.ng-scope:nth-child(2) > td .input-group-append > .btn |
        driver.findElement(By.cssSelector(".ng-scope:nth-child(2) > td .input-group-append > .btn")).click();
        // 4 | click | css=.btn-success |
        driver.findElement(By.cssSelector(".btn-success")).click();
        // 5 | click | id=ageInput |
        driver.findElement(By.id("ageInput")).click();
        // 6 | type | id=ageInput | 19
        driver.findElement(By.id("ageInput")).sendKeys("19");
        // 7 | click | css=.btn-success |
        driver.findElement(By.cssSelector(".btn-success")).click();
        // 8 | assertElementPresent | linkText=New order | New order
        {
            List<WebElement> elements = driver.findElements(By.linkText("New order"));
            assert(elements.size() > 0);
        }
    }
    @Test
    public void edadMayorVino() {
        // Test name: EdadMayorVino
        // Step # | name | target | value
        // 1 | open | http://localhost:3000/#!/#%2F |
        driver.get("http://localhost:3000/#!/#%2F");
        // 2 | setWindowSize | 1159x1004 |
        driver.manage().window().setSize(new Dimension(1159, 1004));
        // 3 | click | css=.ng-scope:nth-child(3) .input-group-append > .btn |
        driver.findElement(By.cssSelector(".ng-scope:nth-child(3) .input-group-append > .btn")).click();
        // 4 | click | css=.btn-success |
        driver.findElement(By.cssSelector(".btn-success")).click();
        // 5 | click | id=ageInput |
        driver.findElement(By.id("ageInput")).click();
        // 6 | type | id=ageInput | 19
        driver.findElement(By.id("ageInput")).sendKeys("19");
        // 7 | click | css=.btn-success |
        driver.findElement(By.cssSelector(".btn-success")).click();
        // 8 | assertElementPresent | linkText=New order | New order
        {
            List<WebElement> elements = driver.findElements(By.linkText("New order"));
            assert(elements.size() > 0);
        }
    }
    @Test
    public void edadMenorCerveza() {
        // Test name: EdadMenorCerveza
        // Step # | name | target | value
        // 1 | open | http://localhost:3000/#!/#%2F |
        driver.get("http://localhost:3000/#!/#%2F");
        // 2 | setWindowSize | 1283x948 |
        driver.manage().window().setSize(new Dimension(1283, 948));
        // 3 | click | css=.ng-scope:nth-child(2) > td .input-group-append > .btn |
        driver.findElement(By.cssSelector(".ng-scope:nth-child(2) > td .input-group-append > .btn")).click();
        // 4 | click | css=.btn-success |
        driver.findElement(By.cssSelector(".btn-success")).click();
        // 5 | click | id=ageInput |
        driver.findElement(By.id("ageInput")).click();
        // 6 | type | id=ageInput | 18
        driver.findElement(By.id("ageInput")).sendKeys("18");
        // 7 | click | css=.btn-success |
        driver.findElement(By.cssSelector(".btn-success")).click();
        // 8 | assertText | css=.alert > .ng-binding | Only adults can buy alcohol!
        assertThat(driver.findElement(By.cssSelector(".alert > .ng-binding")).getText(), is("Only adults can buy alcohol!"));
    }
    @Test
    public void edadMenorVino() {
        // Test name: EdadMenorVino
        // Step # | name | target | value
        // 1 | open | http://localhost:3000/#!/#%2F |
        driver.get("http://localhost:3000/#!/#%2F");
        // 2 | setWindowSize | 1221x1004 |
        driver.manage().window().setSize(new Dimension(1221, 1004));
        // 3 | click | css=.ng-scope:nth-child(3) .input-group-append > .btn |
        driver.findElement(By.cssSelector(".ng-scope:nth-child(3) .input-group-append > .btn")).click();
        // 4 | click | css=.btn-success |
        driver.findElement(By.cssSelector(".btn-success")).click();
        // 5 | click | id=ageInput |
        driver.findElement(By.id("ageInput")).click();
        // 6 | type | id=ageInput | 18
        driver.findElement(By.id("ageInput")).sendKeys("18");
        // 7 | click | css=.btn-success |
        driver.findElement(By.cssSelector(".btn-success")).click();
        // 8 | assertElementPresent | css=.alert > .ng-binding | Only adults can buy alcohol!
        {
            List<WebElement> elements = driver.findElements(By.cssSelector(".alert > .ng-binding"));
            assert(elements.size() > 0);
        }
    }
}